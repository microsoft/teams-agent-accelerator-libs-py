name: "Lint, Build & Test"

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["**"]
    paths:
      - packages/memory_module/**

# Declare default permissions as read only.
permissions: read-all

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: |
          uv sync

  ruff:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: astral-sh/ruff-action@d0a0e814ec17e92d33be7d24dd922b479f1bcd38 # v1.1.1
        with:
          args: check
      - uses: astral-sh/ruff-action@d0a0e814ec17e92d33be7d24dd922b479f1bcd38 # v1.1.1
        with:
          args: "format"

  mypy:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: |
          uv sync
      - name: MyPy
        run: |
          source .venv/bin/activate
          mypy

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: |
          uv sync
      - name: Create .env file
        run: |
          touch .env
          echo AZURE_OPENAI_API_KEY = ${{ secrets.AZURE_OPENAI_API_KEY }} >> .env
          echo AZURE_OPENAI_DEPLOYMENT = ${{ secrets.AZURE_OPENAI_DEPLOYMENT }} >> .env
          echo AZURE_OPENAI_EMBEDDING_DEPLOYMENT = ${{ secrets.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }} >> .env
          echo AZURE_OPENAI_API_BASE = ${{ secrets.AZURE_OPENAI_API_BASE }} >> .env
          echo AZURE_OPENAI_API_VERSION = ${{ secrets.AZURE_OPENAI_API_VERSION }} >> .env
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/ -v 